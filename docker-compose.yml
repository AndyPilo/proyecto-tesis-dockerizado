version: "3"
services:
#zookeper-service
  zookeeper01:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - ./data/zookeeper/data:/var/lib/zookeeper/data
      - ./data/zookeeper/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper01:2888:3888
    container_name: zookeeper01

#kafka-broker-service

  broker01:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
     - ./data/kafka01:/var/lib/kafka/data

    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://broker01:29092,EXTERNAL://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper01:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_LOG_RETENTION_HOURS=24
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2

    container_name: broker01
    depends_on:
      - zookeeper01

  broker02:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9093:9093'
      - '29093:29093'
    volumes:
     - ./data/kafka02:/var/lib/kafka/data

    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=INTERNAL://:29093,EXTERNAL://:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://broker02:29093,EXTERNAL://localhost:9093
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper01:2181
      - KAFKA_BROKER_ID=2
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_LOG_RETENTION_HOURS=24
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    container_name: broker02
    depends_on:
      - zookeeper01
      
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./data/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./data/mosquitto:/mosquitto/data
      - ./data/mosquitto:/mosquitto/log

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    depends_on:
      - broker01
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker01:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper01:2181'
    #  ---------------
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    # If you want to use the Confluent Hub installer to d/l component, but make them available
    # when running this offline, spin up the stack once and then run : 
    #   docker cp kafka-connect:/usr/share/confluent-hub-components ./data/connect-jars
    volumes:
      - ./data/kafka-connect:/data/connect-jars
    # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'


  mongo:
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example



#  mongo:
#    image: mongodb/mongodb-community-server:latest
#    ports:
#      - "27017:27017"
#    restart: always
        